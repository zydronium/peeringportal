@page
@using LUJEWebsite.Library.Utils;
@using MySql.Data.MySqlClient;
@using System.Collections;
@{
	HttpClient client = new HttpClient();
	ViewData["Title"] = "Peering Portal";
	bool loggedin = false;
	bool admin = false;
	string accessToken = "";
}

@try
{
	MySqlConnection luje_conn = new MySqlConnection(Configuration.DBPath);
    await luje_conn.OpenAsync();

	string asnQuery = Request.Query["asn"];
	string aspa = Request.Query["aspa"];
	string role = Request.Query["role"];
	string asn = "";
	string networkName = "";
	string peeringdb_id = "";
	string lanid = "";
	string addrid = "";
	string oaddrid = "";
	string addrv = "";

	MySqlCommand luje_cmd = new MySqlCommand("select peeringdb_network.id, peeringdb_network.name from peeringdb_network where peeringdb_network.asn = @asn and peeringdb_network.status = 'ok';", luje_conn);
	luje_cmd.Parameters.AddWithValue("@asn", Convert.ToInt32(asnQuery));
	await luje_cmd.PrepareAsync();
	MySqlDataReader luje_rdr = (MySqlDataReader)await luje_cmd.ExecuteReaderAsync();

	if (luje_rdr.Read())
	{
		asn = "AS" + asnQuery;
		networkName = luje_rdr["name"].ToString();
		peeringdb_id = luje_rdr["id"].ToString();
		await luje_rdr.CloseAsync();
	}
	else
	{
		await luje_rdr.CloseAsync();
		Response.Redirect("./");
		await luje_conn.CloseAsync();
		return;
	}

    if (!string.IsNullOrEmpty(aspa))
    {
        luje_cmd = new MySqlCommand("update peering set peering_aspa_upstream = @aspa where peering_peeringdb_id = @peeringdb_id and peering_deleted = false;", luje_conn);
        luje_cmd.Parameters.AddWithValue("@aspa", Convert.ToBoolean(aspa));
        luje_cmd.Parameters.AddWithValue("@peeringdb_id", Convert.ToInt32(peeringdb_id));
		await luje_cmd.PrepareAsync();
		await luje_cmd.ExecuteNonQueryAsync();
		await luje_conn.CloseAsync();
		Response.Redirect("./peering_network?asn=" + asnQuery);
		return;
	}

	if (!string.IsNullOrEmpty(role))
	{
		luje_cmd = new MySqlCommand("update peering set peering_role_overwrite = @role where peering_peeringdb_id = @peeringdb_id and peering_deleted = false;", luje_conn);
		luje_cmd.Parameters.AddWithValue("@role", role);
		luje_cmd.Parameters.AddWithValue("@peeringdb_id", Convert.ToInt32(peeringdb_id));
		await luje_cmd.PrepareAsync();
		await luje_cmd.ExecuteNonQueryAsync();
		await luje_conn.CloseAsync();
		Response.Redirect("./peering_network?asn=" + asnQuery);
		return;
	}

	addrid = HttpContext.Request.Query["addrid"];
	if (addrid == "")
	{
		Response.Redirect("./peering_network?asn=" + asnQuery);
		return;
	}
	oaddrid = HttpContext.Request.Query["oaddrid"];
	if (oaddrid == "")
	{
		Response.Redirect("./peering_network?asn=" + asnQuery);
		return;
	}
	addrv = HttpContext.Request.Query["v"];
	if (addrv != "4" && addrv != "6")
	{
		Response.Redirect("./peering_network?asn=" + asnQuery);
		return;
	}
	lanid = HttpContext.Request.Query["lanid"];
	if (lanid == "")
	{
		Response.Redirect("./peering_network?asn=" + asnQuery);
		return;
	}

	luje_cmd = new MySqlCommand("select peeringdb_network_ixlan.ixlan_id, peeringdb_network_ixlan.ipaddr4, peeringdb_network_ixlan.ipaddr6 from peeringdb_network_ixlan where asn = @portalowner and ixlan_id = @lanid and id = @oaddrid and status = 'ok';", luje_conn);
	luje_cmd.Parameters.AddWithValue("@portalowner", Convert.ToInt32(Configuration.PortalOwnerAsn));
	luje_cmd.Parameters.AddWithValue("@lanid", Convert.ToInt32(lanid));
	luje_cmd.Parameters.AddWithValue("@oaddrid", Convert.ToInt32(oaddrid));
	await luje_cmd.PrepareAsync();
	luje_rdr = (MySqlDataReader)await luje_cmd.ExecuteReaderAsync();
	if (await luje_rdr.ReadAsync())
	{
		if (addrv == "4" && luje_rdr["ipaddr4"] == null)
		{
			Response.Redirect("./peering_network?asn=" + asnQuery);
			await luje_rdr.CloseAsync();
			await luje_conn.CloseAsync();
			return;
		}
		if (addrv == "6" && luje_rdr["ipaddr6"] == null)
		{
			Response.Redirect("./peering_network?asn=" + asnQuery);
			await luje_rdr.CloseAsync();
			await luje_conn.CloseAsync();
			return;
		}
		await luje_rdr.CloseAsync();
	}
	else
	{
		Response.Redirect("./peering_network?asn=" + asnQuery);
		await luje_conn.CloseAsync();
		return;
	}

	luje_cmd = new MySqlCommand("select peeringdb_network_ixlan.id, peeringdb_ix.name, peeringdb_network_ixlan.net_id, peeringdb_network_ixlan.ixlan_id, peeringdb_network_ixlan.ipaddr4, peeringdb_network_ixlan.ipaddr6, peeringdb_network.irr_as_set from peeringdb_network_ixlan inner join peeringdb_network on peeringdb_network.id = peeringdb_network_ixlan.net_id inner join peeringdb_ixlan on peeringdb_ixlan.id = peeringdb_network_ixlan.ixlan_id inner join peeringdb_ix on peeringdb_ix.id = peeringdb_ixlan.ix_id where peeringdb_network_ixlan.asn = @asn and peeringdb_network_ixlan.status = 'ok' and peeringdb_network_ixlan.id = @id and peeringdb_network_ixlan.ixlan_id = @lanid;", luje_conn);
	luje_cmd.Parameters.AddWithValue("@asn", Convert.ToInt32(asnQuery));
	luje_cmd.Parameters.AddWithValue("@id", Convert.ToInt32(addrid));
	luje_cmd.Parameters.AddWithValue("@lanid", Convert.ToInt32(lanid));
	await luje_cmd.PrepareAsync();
	luje_rdr = (MySqlDataReader)await luje_cmd.ExecuteReaderAsync();
	string address = "";
	string netid = "";
	string asset = "";

	if (luje_rdr.Read())
	{
		if (addrv == "4" && luje_rdr["ipaddr4"] == null)
		{
			Response.Redirect("./peering_network?asn=" + asnQuery);
			await luje_rdr.CloseAsync();
			await luje_conn.CloseAsync();
			return;
		}
		if (addrv == "6" && luje_rdr["ipaddr6"] == null)
		{
			Response.Redirect("./peering_network?asn=" + asnQuery);
			await luje_rdr.CloseAsync();
			await luje_conn.CloseAsync();
			return;
		}
		if (addrv == "4")
		{
			address = luje_rdr["ipaddr4"].ToString();
		}
		if (addrv == "6")
		{
			address = luje_rdr["ipaddr6"].ToString();
		}
		netid = luje_rdr["net_id"].ToString();
		if (luje_rdr["irr_as_set"].ToString() != "")
		{
			asset = luje_rdr["irr_as_set"].ToString();
			String[] spearator = { "::" };
			String[] assetlist = asset.Split(spearator, StringSplitOptions.RemoveEmptyEntries);
			if (assetlist.Count() == 1)
			{
				asset = assetlist[0];
			}
			else
			{
				asset = assetlist[1];
			}
		}
		else
		{
			asset = "AS" + asnQuery;
		}

		luje_rdr.CloseAsync();
	}
	else
	{
		Response.Redirect("./peering_network?asn=" + asnQuery);
		await luje_conn.CloseAsync();
		return;
	}

	luje_cmd = new MySqlCommand("select peering_id from peering where peering_peeringdb_id = @peeringdb_id and peering_deleted = false;", luje_conn);
	luje_cmd.Parameters.AddWithValue("@peeringdb_id", Convert.ToInt32(peeringdb_id));
	await luje_cmd.PrepareAsync();
	luje_rdr = (MySqlDataReader)await luje_cmd.ExecuteReaderAsync();

	string peering_id = "";

	if (await luje_rdr.ReadAsync())
	{
		peering_id = luje_rdr["peering_id"].ToString();
		await luje_rdr.CloseAsync();
	}
	else
	{
		await luje_rdr.CloseAsync();
		luje_cmd = new MySqlCommand("insert into peering (peering_peeringdb_id, peering_name, peering_as_set, peering_asn, peering_active, peering_aspa_upstream, peering_deployed, peering_created, peering_modified, peering_deleted) values(@peeringdb_id, @name, @asset, @asn, true, true, false, NOW(), NOW(), false);", luje_conn);
		luje_cmd.Parameters.AddWithValue("@peeringdb_id", Convert.ToInt32(peeringdb_id));
		luje_cmd.Parameters.AddWithValue("@name", networkName);
		luje_cmd.Parameters.AddWithValue("@asset", asset);
		luje_cmd.Parameters.AddWithValue("@asn", Convert.ToInt32(asnQuery));
		await luje_cmd.PrepareAsync();
		await luje_cmd.ExecuteNonQueryAsync();

		luje_cmd = new MySqlCommand("select peering_id from peering where peering_peeringdb_id = @peeringdb_id and peering_deleted = false;", luje_conn);
		luje_cmd.Parameters.AddWithValue("@peeringdb_id", Convert.ToInt32(peeringdb_id));
		await luje_cmd.PrepareAsync();
		luje_rdr = (MySqlDataReader)await luje_cmd.ExecuteReaderAsync();
		if (await luje_rdr.ReadAsync())
		{
			peering_id = luje_rdr["peering_id"].ToString();
		}
		await luje_rdr.CloseAsync();
	}

	luje_cmd = new MySqlCommand("select peering_ips_active, peering_ips_deployed, peering_ips_id, peering_id from peering_ips inner join peering on peering.peering_id = peering_ips_peering_id and peering_deleted = false where peering_ips_peeringdb_lanid = @lanid and peering_ips_peeringdb_addrid = @addrid and peering_ips_peeringdb_oaddrid = @oaddrid and peering_ips_type = @type and peering_peeringdb_id = @peeringdb_id and peering_ips_deleted = false;", luje_conn);
	luje_cmd.Parameters.AddWithValue("@peeringdb_id", Convert.ToInt32(peeringdb_id));
	luje_cmd.Parameters.AddWithValue("@addrid", Convert.ToInt32(addrid));
	luje_cmd.Parameters.AddWithValue("@oaddrid", Convert.ToInt32(oaddrid));
	luje_cmd.Parameters.AddWithValue("@lanid", Convert.ToInt32(lanid));
	luje_cmd.Parameters.AddWithValue("@type", Convert.ToInt32(addrv));
	await luje_cmd.PrepareAsync();
	luje_rdr = (MySqlDataReader)await luje_cmd.ExecuteReaderAsync();
		
	if (await luje_rdr.ReadAsync())
	{
		string peering_ips_id = luje_rdr["peering_ips_id"].ToString();
		await luje_rdr.CloseAsync();
		luje_cmd = new MySqlCommand("update peering_ips set peering_ips_deleted = true, peering_ips_modified = NOW() where peering_ips_id = @peering_ips_id and peering_ips_deleted = false;", luje_conn);
		luje_cmd.Parameters.AddWithValue("@peering_ips_id", Convert.ToInt32(peering_ips_id));
		await luje_cmd.PrepareAsync();
		await luje_cmd.ExecuteNonQueryAsync();

		int count = 0;

		luje_cmd = new MySqlCommand("select peering.peering_id from peering_ips inner join peering on peering.peering_id = peering_ips.peering_ips_peering_id and peering.peering_deleted = false where peering_ips_deleted = false and peering_ips_rejected = false and peering.peering_id = @id;", luje_conn);
		luje_cmd.Parameters.AddWithValue("@id", Convert.ToInt32(peering_id));
		await luje_cmd.PrepareAsync();
		luje_rdr = (MySqlDataReader)await luje_cmd.ExecuteReaderAsync();
		if (!await luje_rdr.ReadAsync())
		{
			count++;
		}
		luje_rdr.Close();

		luje_cmd = new MySqlCommand("select peering.peering_id from peering_ips_extra inner join peering on peering.peering_id = peering_ips_extra.peering_ips_extra_peering_id and peering.peering_deleted = false where peering_ips_extra_deleted = false and peering.peering_id = @id;", luje_conn);
		luje_cmd.Parameters.AddWithValue("@id", Convert.ToInt32(peering_id));
		await luje_cmd.PrepareAsync();
		luje_rdr = (MySqlDataReader)await luje_cmd.ExecuteReaderAsync();
		if (!await luje_rdr.ReadAsync())
		{
			count++;
		}
		await luje_rdr.CloseAsync();

		if (count == 2)
		{
			luje_cmd = new MySqlCommand("update peering set peering_deleted = true, peering_modified = NOW() where peering_id = @id and peering_deleted = false;", luje_conn);
			luje_cmd.Parameters.AddWithValue("@id", Convert.ToInt32(peering_id));
			await luje_cmd.PrepareAsync();
			await luje_cmd.ExecuteNonQueryAsync();
		}
	}
	else
	{
		await luje_rdr.CloseAsync();
		luje_cmd = new MySqlCommand("insert into peering_ips (peering_ips_request_id, peering_ips_peering_id, peering_ips_peeringdb_lanid, peering_ips_peeringdb_addrid, peering_ips_peeringdb_oaddrid, peering_ips_type, peering_ips_addr, peering_ips_active, peering_ips_rejected, peering_ips_deployed, peering_ips_notified, peering_ips_notified_approval, peering_ips_notified_skip, peering_ips_created, peering_ips_modified, peering_ips_deleted) values(@request_id, @peering_id, @lanid, @addrid, @oaddrid, @type, @addr, true, false, false, true, true, true, NOW(), NOW(), false);", luje_conn);
		luje_cmd.Parameters.AddWithValue("@request_id", Guid.NewGuid());
		luje_cmd.Parameters.AddWithValue("@peering_id", Convert.ToInt32(peering_id));
		luje_cmd.Parameters.AddWithValue("@lanid", Convert.ToInt32(lanid));
		luje_cmd.Parameters.AddWithValue("@addrid", Convert.ToInt32(addrid));
		luje_cmd.Parameters.AddWithValue("@oaddrid", Convert.ToInt32(oaddrid));
		luje_cmd.Parameters.AddWithValue("@type", Convert.ToInt32(addrv));
		luje_cmd.Parameters.AddWithValue("@addr", address);
		await luje_cmd.PrepareAsync();
		await luje_cmd.ExecuteNonQueryAsync();
	}

	Response.Redirect("./peering_network?asn=" + asnQuery);

	await luje_conn.CloseAsync();
}
catch (HttpRequestException e)
{
	Console.WriteLine("\nException Caught!");
	Console.WriteLine("Message :{0} ", e.Message);
}