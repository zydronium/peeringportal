@page
@using MySql.Data.MySqlClient;
@using System.Collections;
@using LUJEWebsite.Library.Utils;
@{
	HttpClient client = new HttpClient();
	ViewData["Title"] = "Peering Portal";
	bool loggedin = false;
	bool admin = false;
	string accessToken = "";
}

@try
{
	MySqlConnection luje_conn = new MySqlConnection(Configuration.DBPath);
	await luje_conn.OpenAsync();

	string probes_id = HttpContext.Request.Query["delete"];
	string name = "";
	string asn = "";
	string our = "";
	string peer = "";
	string router = "";
	if (Request.HasFormContentType && Request.Form != null && Request.Form.Keys.Count > 0)
	{
		name = Request.Form["name"].FirstOrDefault().Trim();
		asn = Request.Form["asn"].FirstOrDefault().Trim();
		our = Request.Form["our"].FirstOrDefault().Trim();
		peer = Request.Form["peer"].FirstOrDefault().Trim();
		router = Request.Form["router"].FirstOrDefault().Trim();

		if (name != "" && asn != "" && our != "" && peer != "" && router != "")
		{
			if (Utils.AreSameAddressFamily(our, peer))
			{
				int type = Utils.GetAddressFamily(our);

				MySqlCommand luje_cmd = new MySqlCommand("insert into probes (probes_name, probes_asn, probes_router, probes_addr_our, probes_addr_peer, probes_type, probes_deployed, probes_created, probes_modified, probes_deleted) values(@probes_name, @probes_asn, @probes_router, @probes_addr_our, @probes_addr_peer, @probes_type, 0, NOW(), NOW(), false);", luje_conn);
				luje_cmd.Parameters.AddWithValue("@probes_name", name);
				luje_cmd.Parameters.AddWithValue("@probes_asn", Convert.ToInt32(asn));
				luje_cmd.Parameters.AddWithValue("@probes_type", Convert.ToInt32(type));
				luje_cmd.Parameters.AddWithValue("@probes_router", router);
				luje_cmd.Parameters.AddWithValue("@probes_addr_our", our);
				luje_cmd.Parameters.AddWithValue("@probes_addr_peer", peer);
				await luje_cmd.PrepareAsync();
				await luje_cmd.ExecuteNonQueryAsync();
			}

		}
		
	}
	else if (probes_id != "")
	{
		MySqlCommand luje_cmd = new MySqlCommand("select probes_id from probes where probes_id = @probes_id and probes_deleted = false;", luje_conn);
		luje_cmd.Parameters.AddWithValue("@probes_id", Convert.ToInt32(probes_id));
		await  luje_cmd.PrepareAsync();
		MySqlDataReader luje_rdr = (MySqlDataReader)await luje_cmd.ExecuteReaderAsync();

		if (await luje_rdr.ReadAsync())
		{
			await luje_rdr.CloseAsync();
			luje_cmd = new MySqlCommand("update probes set probes_deleted = true,probes_modified = NOW() where probes_id = @id and probes_deleted = false;", luje_conn);
			luje_cmd.Parameters.AddWithValue("@id", Convert.ToInt32(probes_id));
			await luje_cmd.PrepareAsync();
			await luje_cmd.ExecuteNonQueryAsync();
		}else{
			await luje_rdr.CloseAsync();
		}
	}

	Response.Redirect("./probe");
	await luje_conn.CloseAsync();
	return;
}
catch (HttpRequestException e)
{
	Console.WriteLine("\nException Caught!");
	Console.WriteLine("Message :{0} ", e.Message);
}