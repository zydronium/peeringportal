@page
@using MySql.Data.MySqlClient;
@using System.Collections;
@using LUJEWebsite.Library.Utils;
@{
	HttpClient client = new HttpClient();
	ViewData["Title"] = "Peering Portal";
	bool loggedin = false;
	bool admin = false;
	string accessToken = "";
}

@try
{
	MySqlConnection luje_conn = new MySqlConnection(Configuration.DBPath);
	await luje_conn.OpenAsync();

	string downstream_id = HttpContext.Request.Query["id"];
	string downstream_asns_id = HttpContext.Request.Query["delete"];
	MySqlCommand luje_cmd = new MySqlCommand("select downstream_id, downstream_name, downstream_asn from downstream where downstream_id = @downstream_id and downstream_deleted = false;", luje_conn);
	luje_cmd.Parameters.AddWithValue("@downstream_id", Convert.ToInt32(downstream_id));
	await luje_cmd.PrepareAsync();
	MySqlDataReader luje_rdr = (MySqlDataReader)await luje_cmd.ExecuteReaderAsync();

	if (!await luje_rdr.ReadAsync())
	{
		await luje_rdr.CloseAsync();
		Response.Redirect("./downstream");
		await luje_conn.CloseAsync();
		return;
	}
	else
	{
		await luje_rdr.CloseAsync();

		if (Request.HasFormContentType && Request.Form != null && Request.Form.Keys.Count > 0)
		{
			string asn = Request.Form["asn"].FirstOrDefault().Trim();

			if (asn != "")
			{
				luje_cmd = new MySqlCommand("insert into downstream_asns (downstream_asns_asn, downstream_asns_downstream_id, downstream_asns_created, downstream_asns_modified, downstream_asns_deleted) values(@asn, @downstream_id, NOW(), NOW(), false);", luje_conn);
				luje_cmd.Parameters.AddWithValue("@asn", asn);
				luje_cmd.Parameters.AddWithValue("@downstream_id", Convert.ToInt32(downstream_id));
				await luje_cmd.PrepareAsync();
				await luje_cmd.ExecuteNonQueryAsync();

			}

		}
		else if (downstream_id != "" && downstream_asns_id != "")
		{
			luje_cmd = new MySqlCommand("select downstream_asns_id from downstream_asns where downstream_asns_id = @downstream_asns_id and downstream_asns_downstream_id = @downstream_id and downstream_asns_deleted = false;", luje_conn);
			luje_cmd.Parameters.AddWithValue("@downstream_asns_id", Convert.ToInt32(downstream_asns_id));
			luje_cmd.Parameters.AddWithValue("@downstream_id", Convert.ToInt32(downstream_id));
			await luje_cmd.PrepareAsync();
			luje_rdr = (MySqlDataReader)await luje_cmd.ExecuteReaderAsync();

			if (await luje_rdr.ReadAsync())
			{
				await luje_rdr.CloseAsync();
				luje_cmd = new MySqlCommand("update downstream_asns set downstream_asns_deleted = true, downstream_asns_modified = NOW() where downstream_asns_id = @downstream_asns_id and downstream_asns_downstream_id = @downstream_id and downstream_asns_deleted = false;", luje_conn);
				luje_cmd.Parameters.AddWithValue("@downstream_asns_id", Convert.ToInt32(downstream_asns_id));
				luje_cmd.Parameters.AddWithValue("@downstream_id", Convert.ToInt32(downstream_id));
				await luje_cmd.PrepareAsync();
				await luje_cmd.ExecuteNonQueryAsync();
			}
			else
			{
				await luje_rdr.CloseAsync();
			}
		}

		Response.Redirect("./downstream_network?id=" + downstream_id);
		await luje_conn.CloseAsync();
		return;
	}
}
catch (HttpRequestException e)
{
	Console.WriteLine("\nException Caught!");
	Console.WriteLine("Message :{0} ", e.Message);
}