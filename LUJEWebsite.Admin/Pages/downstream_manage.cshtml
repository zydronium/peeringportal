@page
@using MySql.Data.MySqlClient;
@using System.Collections;
@using LUJEWebsite.Library.Utils;
@{
	HttpClient client = new HttpClient();
	ViewData["Title"] = "Peering Portal";
	bool loggedin = false;
	bool admin = false;
	string accessToken = "";
}

@try
{
	MySqlConnection luje_conn = new MySqlConnection(Configuration.DBPath);
	await luje_conn.OpenAsync();

	string downstream_id = HttpContext.Request.Query["delete"];
	string name = "";
	string asn = "";
	bool publicAsn = false;
	if (Request.HasFormContentType && Request.Form != null && Request.Form.Keys.Count > 0)
	{
		name = Request.Form["name"].FirstOrDefault().Trim();
		asn = Request.Form["asn"].FirstOrDefault().Trim();
		var publicAsnString = Request.Form["public"].FirstOrDefault();
        if (publicAsnString == "1")
        {
            publicAsn = true;
        }
        else
        {
            publicAsn = false;
        }

		if (name != "" && asn != "")
		{
			MySqlCommand luje_cmd = new MySqlCommand("select downstream_id from downstream where downstream_asn = @downstream_asn and downstream_deleted = false;", luje_conn);
			luje_cmd.Parameters.AddWithValue("@downstream_asn", Convert.ToInt32(asn));
			await luje_cmd.PrepareAsync();
			MySqlDataReader luje_rdr = (MySqlDataReader)await luje_cmd.ExecuteReaderAsync();

			if (await luje_rdr.ReadAsync())
			{
				await luje_rdr.CloseAsync();
			}else{
				await luje_rdr.CloseAsync();

				luje_cmd = new MySqlCommand("insert into downstream (downstream_name, downstream_asn, downstream_public, downstream_defaultroute, downstream_enabled, downstream_created, downstream_modified, downstream_deleted) values(@downstream_name, @downstream_asn, @downstream_public, false, false, NOW(), NOW(), false);", luje_conn);
				luje_cmd.Parameters.AddWithValue("@downstream_name", name);
				luje_cmd.Parameters.AddWithValue("@downstream_asn", Convert.ToInt32(asn));
				luje_cmd.Parameters.AddWithValue("@downstream_public", publicAsn);
				await luje_cmd.PrepareAsync();
				await luje_cmd.ExecuteNonQueryAsync();
			}
			
		}
		
	}
	else if (downstream_id != "")
	{
		MySqlCommand luje_cmd = new MySqlCommand("select downstream_id from downstream where downstream_id = @downstream_id and downstream_deleted = false;", luje_conn);
		luje_cmd.Parameters.AddWithValue("@downstream_id", Convert.ToInt32(downstream_id));
		await luje_cmd.PrepareAsync();
		MySqlDataReader luje_rdr = (MySqlDataReader)await luje_cmd.ExecuteReaderAsync();

		if (await luje_rdr.ReadAsync())
		{
			await luje_rdr.CloseAsync();
			luje_cmd = new MySqlCommand("update downstream set downstream_deleted = true, downstream_modified = NOW() where downstream_id = @id and downstream_deleted = false;", luje_conn);
			luje_cmd.Parameters.AddWithValue("@id", Convert.ToInt32(downstream_id));
			await luje_cmd.PrepareAsync();
			await luje_cmd.ExecuteNonQueryAsync();
			luje_cmd = new MySqlCommand("update downstream_ips set downstream_ips_deleted = true, downstream_ips_modified = NOW() where downstream_ips_downstream_id = @downstream_id and downstream_ips_deleted = false;", luje_conn);
			luje_cmd.Parameters.AddWithValue("@downstream_id", Convert.ToInt32(downstream_id));
			await luje_cmd.PrepareAsync();
			await luje_cmd.ExecuteNonQueryAsync();
			luje_cmd = new MySqlCommand("update downstream_prefixes set downstream_prefixes_deleted = true, downstream_prefixes_modified = NOW() where downstream_prefixes_downstream_id = @downstream_id and downstream_prefixes_deleted = false;", luje_conn);
			luje_cmd.Parameters.AddWithValue("@downstream_id", Convert.ToInt32(downstream_id));
			await luje_cmd.PrepareAsync();
			await luje_cmd.ExecuteNonQueryAsync();
			luje_cmd = new MySqlCommand("update downstream_asns set downstream_asns_deleted = true, downstream_asns_modified = NOW() where downstream_asns_downstream_id = @downstream_id and downstream_asns_deleted = false;", luje_conn);
			luje_cmd.Parameters.AddWithValue("@downstream_id", Convert.ToInt32(downstream_id));
			await luje_cmd.PrepareAsync();
			await luje_cmd.ExecuteNonQueryAsync();
		}else{
			await luje_rdr.CloseAsync();
		}
	}

	Response.Redirect("./downstream");
	await luje_conn.CloseAsync();
	return;
}
catch (HttpRequestException e)
{
	Console.WriteLine("\nException Caught!");
	Console.WriteLine("Message :{0} ", e.Message);
}