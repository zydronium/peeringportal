@page
@using Newtonsoft.Json.Linq;
@using LUJEWebsite.app.Extentions;
@using LUJEWebsite.app.Model;
@using Npgsql;
@using NpgsqlTypes;
@using System.Collections;
@using LUJEWebsite.app.Utils;
@{
	HttpClient client = new HttpClient();
	ViewData["Title"] = "Peering Portal";
	bool loggedin = false;
	bool admin = false;
	string accessToken = "";
	string lanid = "";
	string addrid = "";
	string oaddrid = "";
	string addrv = "";
	Network selectedNetwork = null;
	if (HttpContext.Session.Get<Boolean>("loggedin") != null && HttpContext.Session.Get<Boolean>("loggedin") == true)
	{
		string asn = HttpContext.Request.Query["asn"];
		if (asn != "")
		{
			Profile profile = HttpContext.Session.Get<Profile>("profile");
			foreach (Network network in profile.networks)
			{
				if (network.asn.ToString() == asn)
				{
					selectedNetwork = network;
					loggedin = true;
				}
			}
		}
		addrid = HttpContext.Request.Query["addrid"];
		if (addrid == "")
		{
			Response.Redirect("/portal/network?asn=" + selectedNetwork.asn);
			return;

		}
		oaddrid = HttpContext.Request.Query["oaddrid"];
		if (oaddrid == "")

		{

			Response.Redirect("/portal/network?asn=" + selectedNetwork.asn);

			return;

		}
		addrv = HttpContext.Request.Query["v"];
		if (addrv != "4" && addrv != "6")
		{
			Response.Redirect("/portal/network?asn=" + selectedNetwork.asn);
			return;
		}
		lanid = HttpContext.Request.Query["lanid"];
		if (lanid == "")
		{
			Response.Redirect("/portal/network?asn=" + selectedNetwork.asn);
			return;
		}
	}
	if (HttpContext.Session.Get<Boolean>("admin") != null && HttpContext.Session.Get<Boolean>("admin") == true)
	{
		admin = true;
	}

	@if (!loggedin)
	{
		Response.Redirect("/portal/");
	}
	else
	{
		try
		{
			Profile profile = HttpContext.Session.Get<Profile>("profile");
			string asn = "AS" + selectedNetwork.asn;
			NpgsqlConnection luje_conn = new NpgsqlConnection(Configuration.DBPath);
			luje_conn.Open();

			NpgsqlCommand luje_cmd = new NpgsqlCommand("select peeringdb_network_ixlan.ixlan_id, peeringdb_network_ixlan.ipaddr4, peeringdb_network_ixlan.ipaddr6 from peeringdb_network_ixlan where asn = @portalowner and ixlan_id = @lanid and id = @oaddrid;;", luje_conn);
			luje_cmd.Parameters.AddWithValue("@portalowner", NpgsqlDbType.Integer, Convert.ToInt32(Configuration.PortalOwnerAsn));
			luje_cmd.Parameters.AddWithValue("@lanid", NpgsqlDbType.Integer, Convert.ToInt32(lanid));
			luje_cmd.Parameters.AddWithValue("@oaddrid", NpgsqlDbType.Integer, Convert.ToInt32(oaddrid));
			luje_cmd.Prepare();
			NpgsqlDataReader luje_rdr = luje_cmd.ExecuteReader();
			if (luje_rdr.Read())
			{
				if (addrv == "4" && luje_rdr["ipaddr4"] == null)
				{
					Response.Redirect("/portal/network?asn=" + selectedNetwork.asn);
					luje_rdr.Close();
					luje_conn.Close();
					return;
				}
				if (addrv == "6" && luje_rdr["ipaddr6"] == null)
				{
					Response.Redirect("/portal/network?asn=" + selectedNetwork.asn);
					luje_rdr.Close();
					luje_conn.Close();
					return;
				}
				luje_rdr.Close();
			}
			else
			{
				Response.Redirect("/portal/network?asn=" + selectedNetwork.asn);
				luje_conn.Close();
				return;
			}

			luje_cmd = new NpgsqlCommand("select peeringdb_network_ixlan.id, peeringdb_ix.name, peeringdb_network_ixlan.net_id, peeringdb_network_ixlan.ixlan_id, peeringdb_network_ixlan.ipaddr4, peeringdb_network_ixlan.ipaddr6, peeringdb_network.irr_as_set from peeringdb_network_ixlan inner join peeringdb_network on peeringdb_network.id = peeringdb_network_ixlan.net_id inner join peeringdb_ixlan on peeringdb_ixlan.id = peeringdb_network_ixlan.ixlan_id inner join peeringdb_ix on peeringdb_ix.id = peeringdb_ixlan.ix_id where peeringdb_network_ixlan.asn = @asn and peeringdb_network_ixlan.id = @id and peeringdb_network_ixlan.ixlan_id = @lanid;", luje_conn);
			luje_cmd.Parameters.AddWithValue("@asn", NpgsqlDbType.Integer, selectedNetwork.asn);
			luje_cmd.Parameters.AddWithValue("@id", NpgsqlDbType.Integer, Convert.ToInt32(addrid));
			luje_cmd.Parameters.AddWithValue("@lanid", NpgsqlDbType.Integer, Convert.ToInt32(lanid));
			luje_cmd.Prepare();
			luje_rdr = luje_cmd.ExecuteReader();
			string address = "";
			string netid = "";
			string asset = "";

			if (luje_rdr.Read())
			{
				if (addrv == "4" && luje_rdr["ipaddr4"] == null)
				{
					Response.Redirect("/portal/network?asn=" + selectedNetwork.asn);
					luje_rdr.Close();
					luje_conn.Close();
					return;
				}
				if (addrv == "6" && luje_rdr["ipaddr6"] == null)
				{
					Response.Redirect("/portal/network?asn=" + selectedNetwork.asn);
					luje_rdr.Close();
					luje_conn.Close();
					return;
				}
				if (addrv == "4")
				{
					address = luje_rdr["ipaddr4"].ToString();
				}
				if (addrv == "6")
				{
					address = luje_rdr["ipaddr6"].ToString();
				}
				netid = luje_rdr["net_id"].ToString();
				if (luje_rdr["irr_as_set"].ToString() != "")
				{
					asset = luje_rdr["irr_as_set"].ToString();
					String[] spearator = { "::" };
					String[] assetlist = asset.Split(spearator,StringSplitOptions.RemoveEmptyEntries);
					if (assetlist.Count() == 1)
					{
						asset = assetlist[0];
					}
					else
					{
						asset = assetlist[1];
					}
				}
				else
				{
					asset = "AS" + selectedNetwork.asn;
				}

				luje_rdr.Close();
			}
			else
			{
				Response.Redirect("/portal/network?asn=" + selectedNetwork.asn);
				luje_conn.Close();
				return;
			}

			luje_cmd = new NpgsqlCommand("select peering_id from peering where peering_peeringdb_id = @peeringdb_id and peering_deleted = false;", luje_conn);
			luje_cmd.Parameters.AddWithValue("@peeringdb_id", NpgsqlDbType.Integer, selectedNetwork.id);
			luje_cmd.Prepare();
			luje_rdr = luje_cmd.ExecuteReader();

			string peering_id = "";

			if (luje_rdr.Read())
			{
				peering_id = luje_rdr["peering_id"].ToString();
				luje_rdr.Close();
			}
			else
			{
				luje_rdr.Close();
				luje_cmd = new NpgsqlCommand("insert into peering (peering_peeringdb_id, peering_name, peering_as_set, peering_asn, peering_active, peering_deployed, peering_created, peering_modified, peering_deleted) values(@peeringdb_id, @name, @asset, @asn, false, false, NOW(), NOW(), false);", luje_conn);
				luje_cmd.Parameters.AddWithValue("@peeringdb_id", NpgsqlDbType.Integer, selectedNetwork.id);
				luje_cmd.Parameters.AddWithValue("@name", NpgsqlDbType.Varchar, selectedNetwork.name);
				luje_cmd.Parameters.AddWithValue("@asset", NpgsqlDbType.Varchar, asset);
				luje_cmd.Parameters.AddWithValue("@asn", NpgsqlDbType.Integer, selectedNetwork.asn);
				luje_cmd.Prepare();
				luje_cmd.ExecuteNonQuery();

				luje_cmd = new NpgsqlCommand("select peering_id from peering where peering_peeringdb_id = @peeringdb_id and peering_deleted = false;", luje_conn);
				luje_cmd.Parameters.AddWithValue("@peeringdb_id", selectedNetwork.id);
				luje_cmd.Prepare();
				luje_rdr = luje_cmd.ExecuteReader();
				if (luje_rdr.Read())
				{
					peering_id = luje_rdr["peering_id"].ToString();
				}
				luje_rdr.Close();
			}


			luje_cmd = new NpgsqlCommand("select peering_ips_active, peering_ips_deployed from peering_ips inner join peering on peering.peering_id = peering_ips_peering_id and peering_deleted = false where peering_ips_peeringdb_lanid = @lanid and peering_ips_peeringdb_addrid = @addrid and peering_ips_peeringdb_oaddrid = @oaddrid and peering_ips_type = @type and peering_peeringdb_id = @peeringdb_id and peering_ips_deleted = false;", luje_conn);
			luje_cmd.Parameters.AddWithValue("@peeringdb_id", NpgsqlDbType.Integer, selectedNetwork.id);
			luje_cmd.Parameters.AddWithValue("@addrid", NpgsqlDbType.Integer, Convert.ToInt32(addrid));
			luje_cmd.Parameters.AddWithValue("@oaddrid", NpgsqlDbType.Integer, Convert.ToInt32(oaddrid));
			luje_cmd.Parameters.AddWithValue("@lanid", NpgsqlDbType.Integer, Convert.ToInt32(lanid));
			luje_cmd.Parameters.AddWithValue("@type", NpgsqlDbType.Integer, Convert.ToInt32(addrv));
			luje_cmd.Prepare();
			luje_rdr = luje_cmd.ExecuteReader();

			if (luje_rdr.Read())
			{
				luje_rdr.Close();
			}
			else
			{
				luje_rdr.Close();
				luje_cmd = new NpgsqlCommand("insert into peering_ips (peering_ips_peering_id, peering_ips_peeringdb_lanid, peering_ips_peeringdb_addrid, peering_ips_peeringdb_oaddrid, peering_ips_type, peering_ips_addr, peering_ips_active, peering_ips_rejected, peering_ips_deployed, peering_ips_notified, peering_ips_notified_skip, peering_ips_notified_approval, peering_ips_notified_email, peering_ips_created, peering_ips_modified, peering_ips_deleted) values(@peering_id, @lanid, @addrid, @oaddrid, @type, @addr, false, false, false, false, false, false, @email, NOW(), NOW(), false);", luje_conn);
				luje_cmd.Parameters.AddWithValue("@peering_id", NpgsqlDbType.Integer, Convert.ToInt32(peering_id));
				luje_cmd.Parameters.AddWithValue("@lanid", NpgsqlDbType.Integer, Convert.ToInt32(lanid));
				luje_cmd.Parameters.AddWithValue("@addrid", NpgsqlDbType.Integer, Convert.ToInt32(addrid));
				luje_cmd.Parameters.AddWithValue("@oaddrid", NpgsqlDbType.Integer, Convert.ToInt32(oaddrid));
				luje_cmd.Parameters.AddWithValue("@type", NpgsqlDbType.Integer, Convert.ToInt32(addrv));
				luje_cmd.Parameters.AddWithValue("@addr", NpgsqlDbType.Varchar, address);
				luje_cmd.Parameters.AddWithValue("@email", NpgsqlDbType.Varchar, profile.email);
				luje_cmd.Prepare();
				luje_cmd.ExecuteNonQuery();
			}

			Response.Redirect("/portal/network?asn=" + selectedNetwork.asn);
			luje_conn.Close();
		}
		catch (HttpRequestException e)
		{
			Console.WriteLine("\nException Caught!");
			Console.WriteLine("Message :{0} ", e.Message);
		}
	}
}