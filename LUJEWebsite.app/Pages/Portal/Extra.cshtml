@page
@using Newtonsoft.Json.Linq;
@using LUJEWebsite.app.Extentions;
@using LUJEWebsite.app.Model;
@using Npgsql;
@using NpgsqlTypes;
@using System.Collections;
@using LUJEWebsite.app.Utils;
@{
	HttpClient client = new HttpClient();
	ViewData["Title"] = "Peering Portal";
	bool loggedin = false;
	bool admin = false;
	string accessToken = "";
	if (HttpContext.Session.Get<Boolean>("loggedin") != null && HttpContext.Session.Get<Boolean>("loggedin") == true)
	{
		loggedin = true;
	}
	if (HttpContext.Session.Get<Boolean>("admin") != null && HttpContext.Session.Get<Boolean>("admin") == true)
	{
		admin = true;
	}
}

@if (!loggedin || !admin)
{
	Response.Redirect("/portal/");
}
else
{
	try
	{
		Profile profile = HttpContext.Session.Get<Profile>("profile");

		NpgsqlConnection luje_conn = new NpgsqlConnection(Configuration.DBPath);
		luje_conn.Open();

		string asnQuery = Request.Query["asn"];
		string asn = "";
		string networkName = "";
		string peeringdb_id = "";
		string asset = "";

		NpgsqlCommand luje_cmd = new NpgsqlCommand("select peeringdb_network.id, peeringdb_network.name, peeringdb_network.irr_as_set from peeringdb_network where asn = @asn;", luje_conn);
		luje_cmd.Parameters.AddWithValue("@asn", NpgsqlDbType.Integer, Convert.ToInt32(asnQuery));
		luje_cmd.Prepare();
		NpgsqlDataReader luje_rdr = luje_cmd.ExecuteReader();

		if (luje_rdr.Read())
		{
			asn = "AS" + asnQuery;
			networkName = luje_rdr["name"].ToString();
			peeringdb_id = luje_rdr["id"].ToString();
			if (luje_rdr["irr_as_set"].ToString() != "")
			{
				asset = luje_rdr["irr_as_set"].ToString();
				String[] spearator = { "::" };
				String[] assetlist = asset.Split(spearator, StringSplitOptions.RemoveEmptyEntries);
				if (assetlist.Count() == 1)
				{
					asset = assetlist[0];
				}
				else
				{
					asset = assetlist[1];
				}
			}
			else
			{
				asset = "AS" + asnQuery;
			}
			luje_rdr.Close();
		}
		else
		{
			luje_rdr.Close();
			Response.Redirect("/portal/admin");
			luje_conn.Close();
			return;
		}

		string addrid = HttpContext.Request.Query["delete"];
		string addr = "";
		if (Request.HasFormContentType && Request.Form != null && Request.Form.Keys.Count > 0)
		{
			addr = Request.Form["addr"].FirstOrDefault().Trim();
		}
		if (addrid == "" && addr == "")
		{
			Response.Redirect("/portal/manual?asn=" + asnQuery);
			luje_conn.Close();
			return;
		}

		luje_cmd = new NpgsqlCommand("select peering_id from peering where peering_peeringdb_id = @peeringdb_id and peering_deleted = false;", luje_conn);
		luje_cmd.Parameters.AddWithValue("@peeringdb_id", NpgsqlDbType.Integer, Convert.ToInt32(peeringdb_id));
		luje_cmd.Prepare();
		luje_rdr = luje_cmd.ExecuteReader();

		string peering_id = "";

		if (luje_rdr.Read())
		{
			peering_id = luje_rdr["peering_id"].ToString();
			luje_rdr.Close();
		}
		else
		{
			luje_rdr.Close();
			luje_cmd = new NpgsqlCommand("insert into peering (peering_peeringdb_id, peering_name, peering_as_set, peering_asn, peering_active, peering_deployed, peering_created, peering_modified, peering_deleted) values(@peeringdb_id, @name, @asset, @asn, true, false, NOW(), NOW(), false);", luje_conn);
			luje_cmd.Parameters.AddWithValue("@peeringdb_id", NpgsqlDbType.Integer, Convert.ToInt32(peeringdb_id));
			luje_cmd.Parameters.AddWithValue("@name", NpgsqlDbType.Varchar, networkName);
			luje_cmd.Parameters.AddWithValue("@asset", NpgsqlDbType.Varchar, asset);
			luje_cmd.Parameters.AddWithValue("@asn", NpgsqlDbType.Integer, Convert.ToInt32(asnQuery));
			luje_cmd.Prepare();
			luje_cmd.ExecuteNonQuery();

			luje_cmd = new NpgsqlCommand("select peering_id from peering where peering_peeringdb_id = @peeringdb_id and peering_deleted = false;", luje_conn);
			luje_cmd.Parameters.AddWithValue("@peeringdb_id", NpgsqlDbType.Integer, Convert.ToInt32(peeringdb_id));
			luje_cmd.Prepare();
			luje_rdr = luje_cmd.ExecuteReader();
			if (luje_rdr.Read())
			{
				peering_id = luje_rdr["peering_id"].ToString();
			}
			luje_rdr.Close();
		}

		//delete address
		if (addrid != "")
		{
			luje_cmd = new NpgsqlCommand("select peering_ips_extra_active, peering_ips_extra_deployed, peering_ips_extra_id from peering_ips_extra inner join peering on peering.peering_id = peering_ips_extra_peering_id and peering_deleted = false where peering_ips_extra_id = @addrid and peering_peeringdb_id = @peeringdb_id and peering_ips_extra_deleted = false;", luje_conn);
			luje_cmd.Parameters.AddWithValue("@peeringdb_id", NpgsqlDbType.Integer, Convert.ToInt32(peeringdb_id));
			luje_cmd.Parameters.AddWithValue("@addrid", NpgsqlDbType.Integer, Convert.ToInt32(addrid));
			luje_cmd.Prepare();
			luje_rdr = luje_cmd.ExecuteReader();

			if (luje_rdr.Read())
			{
				string peering_ips_extra_id = luje_rdr["peering_ips_extra_id"].ToString();
				luje_rdr.Close();
				luje_cmd = new NpgsqlCommand("update peering_ips_extra set peering_ips_extra_deleted = true, peering_ips_extra_modified = NOW() where peering_ips_extra_id = @peering_ips_extra_id and peering_ips_extra_deleted = false;", luje_conn);
				luje_cmd.Parameters.AddWithValue("@peering_ips_extra_id", NpgsqlDbType.Integer, Convert.ToInt32(peering_ips_extra_id));
				luje_cmd.Prepare();
				luje_cmd.ExecuteNonQuery();

				luje_cmd = new NpgsqlCommand("select peering.peering_id from peering_ips_extra inner join peering on peering.peering_id = peering_ips_extra.peering_ips_extra_peering_id and peering.peering_deleted = false where peering_ips_extra_deleted = false and peering.peering_id = @peering_id;", luje_conn);
				luje_cmd.Parameters.AddWithValue("@peering_id", NpgsqlDbType.Integer, Convert.ToInt32(peering_id));
				luje_cmd.Prepare();
				luje_rdr = luje_cmd.ExecuteReader();

				if (!luje_rdr.Read())
				{
					luje_rdr.Close();
					luje_cmd = new NpgsqlCommand("update peering set peering_deleted = true, peering_modified = NOW() where peering_id = @peering_id and peering_deleted = false;", luje_conn);
					luje_cmd.Parameters.AddWithValue("@peering_id", NpgsqlDbType.Integer, Convert.ToInt32(peering_id));
					luje_cmd.Prepare();
					luje_cmd.ExecuteNonQuery();
				}
				else
				{
					luje_rdr.Close();
				}
			}
			else
			{
				luje_rdr.Close();
			}
		}

		//add address
		if (addr != "")
		{
			luje_rdr.Close();
			luje_cmd = new NpgsqlCommand("insert into peering_ips_extra (peering_ips_extra_peering_id, peering_ips_extra_addr, peering_ips_extra_active, peering_ips_extra_deployed, peering_ips_extra_created, peering_ips_extra_modified, peering_ips_extra_deleted) values(@peering_id, @addr, true, false, NOW(), NOW(), false);", luje_conn);
			luje_cmd.Parameters.AddWithValue("@peering_id", NpgsqlDbType.Integer, Convert.ToInt32(peering_id));
			luje_cmd.Parameters.AddWithValue("@addr", NpgsqlDbType.Varchar, addr);
			luje_cmd.Prepare();
			luje_cmd.ExecuteNonQuery();
		}

		Response.Redirect("/portal/manual?asn=" + asnQuery);
		luje_conn.Close();
	}
	catch (HttpRequestException e)
	{
		Console.WriteLine("\nException Caught!");
		Console.WriteLine("Message :{0} ", e.Message);
	}
}