@page
@using Newtonsoft.Json.Linq;
@using LUJEWebsite.app.Extentions;
@using LUJEWebsite.app.Model;
@using LUJEWebsite.app.Utils;
@using NpgsqlTypes;
@using Npgsql;
@{
	HttpClient client = new HttpClient();
	ViewData["Title"] = "Peering Portal";
	bool loggedin = false;
	bool admin = false;
	string accessToken = "";
	if (HttpContext.Session.Get<Boolean>("loggedin") != null && HttpContext.Session.Get<Boolean>("loggedin") == true)
	{
		loggedin = true;
	}
	if (HttpContext.Session.Get<Boolean>("admin") != null && HttpContext.Session.Get<Boolean>("admin") == true)
	{
		admin = true;
	}
}

@if (!loggedin || !admin)
{
	Response.Redirect("/portal/");
}
else
{
	try
	{
		Profile profile = HttpContext.Session.Get<Profile>("profile");

		NpgsqlConnection luje_conn = new NpgsqlConnection(Configuration.DBPath);
		luje_conn.Open();

		NpgsqlCommand luje_cmd = new NpgsqlCommand(@"select peering_ips.peering_ips_id, peering_ips.peering_ips_peeringdb_lanid, peering_ips.peering_ips_peeringdb_addrid, peering_ips.peering_ips_type, peering.peering_peeringdb_id, peeringdb_network_ixlan.id, peeringdb_ix.name as ix_name, peeringdb_network_ixlan.ixlan_id, peeringdb_network_ixlan.net_id, peeringdb_network_ixlan.ipaddr4, peeringdb_network_ixlan.ipaddr6, peeringdb_network.asn, peeringdb_network.name, owner_peeringdb_network_ixlan.id as ownerid, owner_peeringdb_network_ixlan.ipaddr4 as owneripaddr4, owner_peeringdb_network_ixlan.ipaddr6 as owneripaddr6
from peering_ips
inner join peering on peering.peering_id = peering_ips.peering_ips_peering_id and peering.peering_deleted = false
inner join peeringdb_network on peeringdb_network.id = peering_peeringdb_id
inner join peeringdb_network_ixlan on peeringdb_network.id = peeringdb_network_ixlan.net_id
inner join peeringdb_ixlan on peeringdb_ixlan.id = peeringdb_network_ixlan.ixlan_id
inner join peeringdb_network_ixlan as owner_peeringdb_network_ixlan on peeringdb_ixlan.id = owner_peeringdb_network_ixlan.ixlan_id and owner_peeringdb_network_ixlan.asn = @ownerasn
inner join peeringdb_ix on peeringdb_ix.id = peeringdb_ixlan.ix_id and peeringdb_network_ixlan.id = peering_ips_peeringdb_addrid and peeringdb_network_ixlan.ixlan_id = peering_ips_peeringdb_lanid
where peering_ips_active = false and peering_ips_rejected = false and peering_ips_deleted = false order by peering.peering_asn asc;", luje_conn);
		luje_cmd.Parameters.AddWithValue("@ownerasn", NpgsqlDbType.Integer, Convert.ToInt32(Configuration.PortalOwnerAsn));
		luje_cmd.Prepare();
		NpgsqlDataReader luje_rdr = luje_cmd.ExecuteReader();

		<div class="columns nine">
			<h2>Peering Admin</h2>
			<p><a href="/portal/admin">Admin</a> - <a href="/portal/approvals">Pending approvals</a> - <a href="/portal/logout">Logout</a> - <a href="/portal/">Portal Home</a></p>
			<h3>Approvals</h3>
			<table width="100%">
				<tr>
					<td width="20%">ASN</td>
					<td width="20%">Name</td>
					<td width="20%">IXP</td>
					<td width="30%">IP Address</td>
					<td width="10%"></td>
				</tr>
				<tr>
					<td width="20%"></td>
					<td width="20%"></td>
					<td width="20%"></td>
					<td width="30%"></td>
					<td width="10%"></td>
				</tr>
				@while (luje_rdr.Read())
				{
					string addr = "";
					string owneraddr = "";
					string asn = "AS" + luje_rdr["asn"].ToString();
					if (luje_rdr["peering_ips_type"].ToString() == "4")
					{
						addr = luje_rdr["ipaddr4"].ToString();
						owneraddr = luje_rdr["owneripaddr4"].ToString();
					}
					else if (luje_rdr["peering_ips_type"].ToString() == "6")
					{
						addr = luje_rdr["ipaddr6"].ToString();
						owneraddr = luje_rdr["owneripaddr6"].ToString();
					}
					<tr>
						<td width="20%">@asn</td>
						<td width="20%">@luje_rdr["name"].ToString()</td>
						<td width="20%">@luje_rdr["ix_name"].ToString()</td>
						<td width="30%">Peer: @addr<br />Ours: @owneraddr</td>
						<td width="10%"><a href="/portal/approve?id=@luje_rdr["peering_ips_id"].ToString()&approve=y">Yes</a> <a href="/portal/approve?id=@luje_rdr["peering_ips_id"].ToString()&approve=n">No</a></td>
					</tr>
				}
				@{
					luje_rdr.Close();
				}
			</table>
		</div>

		luje_conn.Close();
	}
	catch (HttpRequestException e)
	{
		Console.WriteLine("\nException Caught!");
		Console.WriteLine("Message :{0} ", e.Message);
	}
}